name: build

on: [push, pull_request]

jobs:
  linux:
    timeout-minutes: 10

    strategy:
      matrix:
        compiler: [g++-7, g++-8, g++-9, g++, clang++-8, clang++-9, clang++]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Doxygen
        run: |
          sudo apt-get update
          sudo apt install doxygen -y

      - name: Install g++-7
        if: ${{ matrix.compiler == 'g++-7' }}
        run: sudo apt-get install g++-7 -y

      - name: Install g++-8
        if: ${{ matrix.compiler == 'g++-8' }}
        run: sudo apt-get install g++-8 -y

      - name: Install clang-8
        if: ${{ matrix.compiler == 'clang++-8' }}
        run: sudo apt-get install clang-8 -y
        
      - name: Create Build Environment
        run: cmake -E make_directory ${{ runner.workspace }}/build ${{ runner.workspace }}/instdir

      - name: Configure CMake
        shell: bash
        working-directory: ${{ runner.workspace }}/build
        run: |
          cmake \
            $GITHUB_WORKSPACE \
            -DENGINE_BUILD_TESTING=ON -DENGINE_BUILD_APP=ON -DENGINE_INSTALL_APP=ON -DENGINE_BUILD_DOCS=ON \
            -DCMAKE_INSTALL_PREFIX="${{ runner.workspace }}/instdir"
        env:
          CXX: ${{ matrix.compiler }}

      - name: Build
        shell: bash
        working-directory: ${{ runner.workspace }}/build
        run: cmake --build . --config Debug

      - name: Run tests
        shell: bash
        working-directory: ${{ runner.workspace }}/build
        run: ctest --timeout 10 -C Debug -j4
        env:
          CTEST_OUTPUT_ON_FAILURE: 1

      - name: Install Strip
        shell: bash
        working-directory: ${{ runner.workspace }}/build
        run: cmake --install . --strip

      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          path: ${{ runner.workspace }}/instdir
          name: ubuntu-${{ matrix.compiler }}

  windows:
    timeout-minutes: 10

    strategy:
      matrix:
        os: [windows-latest, windows-2016]
        toolset: [clang-cl, default, v141]
        include:
          - toolset: clang-cl
            toolset_option: -T"ClangCl"
          - toolset: v141
            toolset_option: -T"v141"
        exclude:
          - os: windows-2016
            toolset: clang-cl
          - os: windows-2016
            toolset: v141

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Create Build Environment
        run: cmake -E make_directory ${{ runner.workspace }}/build ${{ runner.workspace }}/instdir

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: |
          cmake \
            $GITHUB_WORKSPACE \
            -DENGINE_BUILD_TESTING=ON -DENGINE_BUILD_APP=ON -DENGINE_INSTALL_APP=ON \
            -DCMAKE_INSTALL_PREFIX="${{ runner.workspace }}/instdir"
        env:
          CXX: ${{ matrix.compiler }}

      - name: Build
        shell: bash
        working-directory: ${{ runner.workspace }}/build
        run: cmake --build . --config Release

      - name: Run tests
        shell: bash
        working-directory: ${{ runner.workspace }}/build
        run: ctest --timeout 10 -C Release -j4
        env:
          CTEST_OUTPUT_ON_FAILURE: 1

      - name: Install Strip
        shell: bash
        working-directory: ${{ runner.workspace }}/build
        run: cmake --install . --strip

      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          path: ${{ runner.workspace }}/instdir
          name: ${{ matrix.os }}-${{ matrix.toolset }}

  docs:
    name: Publish documentation
    runs-on: macos-latest
    needs: linux

    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: ubuntu-g++
          path: ${{ runner.workspace }}

      - name: Display structure of downloaded files
        working-directory: ${{ runner.workspace }}
        run: ls -R

      - name: Publish
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ runner.workspace }}/docs/doxygen/html
